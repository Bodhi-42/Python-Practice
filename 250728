def min_eating_speed(piles: list[int], h: int) -> int:

    left = 1 # O(n)
    right = max(piles)
    result = right

    while left <= right:

        mid = (left + right) // 2
        hour_needed = 0
        
        for p in piles:
            hour_needed += p//mid + (1 if p%mid != 0 else 0)

        if hour_needed <= h:
            result = mid
            right = mid - 1
        else:
            left = mid + 1
    print(result)

min_eating_speed([3,6,7,11], 8)       # Output: 4
min_eating_speed([30,11,23,4,20], 5)  # Output: 30
min_eating_speed([30,11,23,4,20], 6)  # Output: 23
