import numpy as np
import matplotlib.pyplot as plt
from scipy.stats import norm  # for normal PDF

class CLTSimulator:
    def __init__(self, dist_func, sample_size, n_samples):
        self.dist_func = dist_func
        self.sample_size = sample_size
        self.n_samples = n_samples
        self.dist_mean = None

    def simulate(self):
        # collect sample means
        self.dist_mean = np.array([
            np.mean(self.dist_func(size=self.sample_size))
            for _ in range(self.n_samples)
        ])

    def plot(self):
        if self.dist_mean is None:
            raise ValueError("Run simulate() first!")

        # histogram of sample means
        plt.hist(self.dist_mean, bins=self.n_samples // 100,
                 density=True, alpha=0.6, color='skyblue',
                 label="Sample means")

        # fit normal distribution
        mu = np.mean(self.dist_mean)
        sigma = np.std(self.dist_mean)

        x = np.linspace(min(self.dist_mean), max(self.dist_mean), 200)
        plt.plot(x, norm.pdf(x, mu, sigma), 'r-', lw=2, label="Normal approx")

        plt.title("Central Limit Theorem Demonstration")
        plt.xlabel("Sample Mean")
        plt.ylabel("Density")
        plt.legend()
        plt.show()

# Example usage
clt = CLTSimulator(np.random.exponential, sample_size=30, n_samples=10000)
clt.simulate()
clt.plot()
